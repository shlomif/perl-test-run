#!/usr/bin/perl -w

use strict;

use Test::Run::CmdLine::Iface;
use Getopt::Long;
use Pod::Usage 1.12;
use File::Spec;

use vars qw($VERSION);
$VERSION = "0.0100_05";

sub include_map
{
    my $arg = shift;
    my $ret = "-I$arg";
    if (($arg =~ /\s/) && 
        (! (($arg =~ /^"/) && ($arg =~ /"$/)) ) 
       )
    {
        return "\"$ret\"";
    }
    else
    {
        return $ret;
    }
}

sub print_version
{
    printf("runprove v%s, using Test::Run v%s, Test::Run::CmdLine v%s and Perl v%s\n",
        $VERSION,
        $Test::Run::Obj::VERSION,
        $Test::Run::CmdLine::VERSION,
        $^V
    );
}

# Allow a -I<path> switch instead of -I <path>
@ARGV = (map { /^-I(.+)/ ? ("-I", $1) : ($_) } @ARGV);

Getopt::Long::Configure( "no_ignore_case" );
Getopt::Long::Configure( "bundling" );
my $verbose = undef;
my $debug = undef;
my $timer = undef;
my $interpreter = undef;
my @switches = ();
my @includes = ();
my $blib = 0;
GetOptions(
    'b|blib' => \$blib,
    'd|debug' => \$debug,
    'I=s@' => \@includes,
    'perl=s' => \$interpreter,
    # Always put -t and -T up front.
    't' => sub { unshift @switches, "-t"; }, 
    'T' => sub { unshift @switches, "-T"; }, 
    'timer' => \$timer,
    'v|verbose' => \$verbose,
    'V|version' => sub { print_version(); exit(0); },
);

if ($blib)
{
    my @blibdirs = blibdirs();
    if (@blibdirs)
    {
        unshift @includes, @blibdirs;
    }
    else
    {
        warn "Could not find blib dirs";
    }
}

push @switches, (map { include_map($_) } @includes);

my $test_run =
    Test::Run::CmdLine::Iface->new(
        'test_files' => [@ARGV],
        'backend_params' =>
        {
            (defined($verbose) ? ('Verbose' => $verbose) : ()),
            (defined($debug) ? ('Debug' => $debug) : ()),
            (defined($timer) ? ('Timer' => $timer) : ()),
            (defined($interpreter) ? ('Test_Interpreter' => $interpreter) : ()),
            (@switches ? ('Switches' => join(" ", @switches)) : ()),
        },
    );

$test_run->run();

# Stolen directly from blib.pm
sub blibdirs {
    my $dir = File::Spec->curdir;
    if ($^O eq 'VMS') {
        ($dir = VMS::Filespec::unixify($dir)) =~ s-/\z--;
    }
    my $archdir = "arch";
    if ( $^O eq "MacOS" ) {
        # Double up the MP::A so that it's not used only once.
        $archdir = $MacPerl::Architecture = $MacPerl::Architecture;
    }

    my $i = 5;
    while ($i--) {
        my $blib      = File::Spec->catdir( $dir, "blib" );
        my $blib_lib  = File::Spec->catdir( $blib, "lib" );
        my $blib_arch = File::Spec->catdir( $blib, $archdir );

        if ( -d $blib && -d $blib_arch && -d $blib_lib ) {
            return ($blib_arch,$blib_lib);
        }
        $dir = File::Spec->catdir($dir, File::Spec->updir);
    }
    warn "$0: Cannot find blib\n";
    return;
}

1;


